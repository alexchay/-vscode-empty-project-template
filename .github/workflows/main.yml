name: Packaging

on: [push,pull_request]

jobs:
  linting:
    name: linting
    runs-on: ${{ matrix.platform }}
    strategy:
      matrix:
        python-version: ["3.9", "3.10"]
        platform: [ubuntu-20.04, ubuntu-22.04]
        
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
          
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.4.2
          virtualenvs-create: true
          virtualenvs-in-project: true
          
      - name: Install Task
        uses: arduino/setup-task@v1
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Cache Poetry virtualenv
        uses: actions/cache@v2
        id: cached-poetry-dependencies
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
          
      - name: Install Dependencies
        run: |
           task install
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        
      - name: Analysing the code with pylint
        run: |
          pylint $(git ls-files '*.py')
